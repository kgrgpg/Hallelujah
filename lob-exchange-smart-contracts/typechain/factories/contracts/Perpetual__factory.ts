/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Perpetual, PerpetualInterface } from "../../contracts/Perpetual";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_collateralManagerAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_priceOracleAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fundingRate",
        type: "uint256",
      },
    ],
    name: "FundingRateAdjusted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isLong",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "string",
        name: "asset",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "exitPrice",
        type: "uint256",
      },
    ],
    name: "PositionClosed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "asset",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "liquidationPrice",
        type: "uint256",
      },
    ],
    name: "PositionLiquidated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isLong",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "string",
        name: "asset",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "entryPrice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "leverage",
        type: "uint256",
      },
    ],
    name: "PositionOpened",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "isLong",
        type: "bool",
      },
    ],
    name: "calculateFundingRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "isLong",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "entryPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maintenanceMargin",
        type: "uint256",
      },
    ],
    name: "calculateLiquidationPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "leverage",
        type: "uint256",
      },
    ],
    name: "calculateMaintenanceMargin",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "exitPrice",
        type: "uint256",
      },
    ],
    name: "closePosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getPosition",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isLong",
            type: "bool",
          },
          {
            internalType: "string",
            name: "asset",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "entryPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidationPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fundingRate",
            type: "uint256",
          },
        ],
        internalType: "struct Perpetual.Position",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "liquidatePosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "longPositions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxLeverage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "isLong",
        type: "bool",
      },
      {
        internalType: "string",
        name: "asset",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "leverage",
        type: "uint256",
      },
    ],
    name: "openPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "positions",
    outputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isLong",
        type: "bool",
      },
      {
        internalType: "string",
        name: "asset",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "entryPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "liquidationPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "fundingRate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxLeverage",
        type: "uint256",
      },
    ],
    name: "setMaxLeverage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "shortPositions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052600a60035534801561001557600080fd5b5060405161144e38038061144e83398101604081905261003491610091565b600080546001600160a01b039384166001600160a01b03199182161790915560018054929093169181169190911790915560028054909116331790556100c4565b80516001600160a01b038116811461008c57600080fd5b919050565b600080604083850312156100a457600080fd5b6100ad83610075565b91506100bb60208401610075565b90509250929050565b61137b806100d36000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806398d64a811161008c578063c0ea604111610066578063c0ea6041146101c6578063d3127e63146101d9578063d89dab8a146101ec578063ec27585c146101f557600080fd5b806398d64a8114610197578063a126d601146101aa578063ae3302c2146101bd57600080fd5b806316c19739146100d45780633fc89082146100fd57806355f575101461011e5780635d9b55e4146101445780637498a0f0146101575780638da5cb5b1461016c575b600080fd5b6100e76100e2366004610da7565b6101fe565b6040516100f49190610e16565b60405180910390f35b61011061010b366004610e85565b61034e565b6040519081526020016100f4565b61013161012c366004610da7565b61037a565b6040516100f49796959493929190610ea7565b610110610152366004610f0a565b61044d565b61016a610165366004610da7565b61048e565b005b60025461017f906001600160a01b031681565b6040516001600160a01b0390911681526020016100f4565b61016a6101a5366004610f3b565b6106f1565b61016a6101b836600461100d565b610a26565b61011060035481565b6101106101d4366004611026565b610b6d565b61016a6101e736600461100d565b610bbf565b61011060055481565b61011060065481565b6102496040518060e0016040528060006001600160a01b0316815260200160008152602001600015158152602001606081526020016000815260200160008152602001600081525090565b6001600160a01b03808316600090815260046020908152604091829020825160e08101845281549094168452600181015491840191909152600281015460ff161515918301919091526003810180546060840191906102a79061105f565b80601f01602080910402602001604051908101604052809291908181526020018280546102d39061105f565b80156103205780601f106102f557610100808354040283529160200191610320565b820191906000526020600020905b81548152906001019060200180831161030357829003601f168201915b5050505050815260200160048201548152602001600582015481526020016006820154815250509050919050565b6000606461035c83856110af565b61036790600a6110d1565b61037191906110af565b90505b92915050565b60046020526000908152604090208054600182015460028301546003840180546001600160a01b0390941694929360ff90921692916103b89061105f565b80601f01602080910402602001604051908101604052809291908181526020018280546103e49061105f565b80156104315780601f1061040657610100808354040283529160200191610431565b820191906000526020600020905b81548152906001019060200180831161041457829003601f168201915b5050505050908060040154908060050154908060060154905087565b6000808261046a5760055460065461046591906110e8565b61047a565b60065460055461047a91906110e8565b90506104876064826110af565b9392505050565b6001600160a01b038082166000908152600460209081526040808320815160e08101835281549095168552600181015492850192909252600282015460ff161515908401526003810180549293926060840191906104eb9061105f565b80601f01602080910402602001604051908101604052809291908181526020018280546105179061105f565b80156105645780601f1061053957610100808354040283529160200191610564565b820191906000526020600020905b81548152906001019060200180831161054757829003601f168201915b50505091835250506004828101546020830152600583015460408084019190915260069093015460609283015260015491840151925163524f388960e01b81529394506000936001600160a01b039092169263524f3889926105c692016110fb565b602060405180830381865afa1580156105e3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610607919061110e565b90508160400151801561061d57508160a0015181105b806106385750816040015115801561063857508160a0015181115b6106955760405162461bcd60e51b8152602060048201526024808201527f506f736974696f6e206973206e6f7420756e6465722d636f6c6c61746572616c6044820152631a5e995960e21b60648201526084015b60405180910390fd5b61069f8382610c0f565b826001600160a01b03167f2211dea6c0888e69e3c1a7711380636f605e1659f3caeff4183c246926b4836e83606001518460200151846040516106e493929190611127565b60405180910390a2505050565b6003548111156107435760405162461bcd60e51b815260206004820181905260248201527f4c657665726167652065786365656473206d6178696d756d20616c6c6f776564604482015260640161068c565b600061074f82846110af565b6000546040516378ddfa1960e11b815233600482015291925082916001600160a01b039091169063f1bbf43290602401602060405180830381865afa15801561079c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c0919061110e565b101561080e5760405162461bcd60e51b815260206004820152601760248201527f496e73756666696369656e7420636f6c6c61746572616c000000000000000000604482015260640161068c565b60015460405163524f388960e01b81526000916001600160a01b03169063524f38899061083f9088906004016110fb565b602060405180830381865afa15801561085c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610880919061110e565b9050600061088d8761044d565b9050600061089b868661034e565b905060006108ab89858985610b6d565b6040805160e0810182523380825260208083018c81528e1515848601908152606085018f8152608086018c905260a0860188905260c086018b90526000948552600490935294909220835181546001600160a01b0319166001600160a01b0390911617815591516001830155925160028201805460ff19169115159190911790559151929350916003820190610941908261119b565b506080820151600482015560a0820151600582015560c090910151600690910155881561098557866005600082825461097a919061125b565b9091555061099d9050565b8660066000828254610997919061125b565b90915550505b336001600160a01b03167f42483492ff6d04a34045b14e1e1812d4d8fd38e92d6ca10034a15beeddb8046e8a8a8a888b6040516109de95949392919061126e565b60405180910390a260405183815233907fc594d355377182705d1f688a0e1374cd8ad8552797ff1783ff2ba0f570d802749060200160405180910390a2505050505050505050565b3360008181526004602052604090206001810154610a795760405162461bcd60e51b815260206004820152601060248201526f27379037b832b7103837b9b4ba34b7b760811b604482015260640161068c565b600281015460ff1615610aa757806001015460056000828254610a9c91906110e8565b90915550610ac39050565b806001015460066000828254610abd91906110e8565b90915550505b6002810154600182015460405133927fb35c42344e261cf30562de4fb4b9ea45bd5109734cb9208ecedc84cec039404392610b0b9260ff9092169160038701919089906112a6565b60405180910390a233600090815260046020526040812080546001600160a01b03191681556001810182905560028101805460ff1916905590610b516003830182610d51565b5060006004820181905560058201819055600690910155505050565b600080610b7a83856110af565b905060006064610b8a83886110d1565b610b9491906110af565b905086610baa57610ba5818761125b565b610bb4565b610bb481876110e8565b979650505050505050565b6002546001600160a01b03163314610c0a5760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b604482015260640161068c565b600355565b6001600160a01b03821660009081526004602052604090206001810154610c6b5760405162461bcd60e51b815260206004820152601060248201526f27379037b832b7103837b9b4ba34b7b760811b604482015260640161068c565b600281015460ff1615610c9957806001015460056000828254610c8e91906110e8565b90915550610cb59050565b806001015460066000828254610caf91906110e8565b90915550505b600281015460018201546040516001600160a01b038616927fb35c42344e261cf30562de4fb4b9ea45bd5109734cb9208ecedc84cec039404392610d069260ff9092169160038701919088906112a6565b60405180910390a26001600160a01b038316600090815260046020526040812080546001600160a01b03191681556001810182905560028101805460ff1916905590610b5160038301825b508054610d5d9061105f565b6000825580601f10610d6d575050565b601f016020900490600052602060002090810190610d8b9190610d8e565b50565b5b80821115610da35760008155600101610d8f565b5090565b600060208284031215610db957600080fd5b81356001600160a01b038116811461048757600080fd5b6000815180845260005b81811015610df657602081850181015186830182015201610dda565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260018060a01b038251166020820152602082015160408201526040820151151560608201526000606083015160e06080840152610e5b610100840182610dd0565b9050608084015160a084015260a084015160c084015260c084015160e08401528091505092915050565b60008060408385031215610e9857600080fd5b50508035926020909101359150565b60018060a01b0388168152866020820152851515604082015260e060608201526000610ed660e0830187610dd0565b60808301959095525060a081019290925260c090910152949350505050565b80358015158114610f0557600080fd5b919050565b600060208284031215610f1c57600080fd5b61037182610ef5565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610f5157600080fd5b610f5a85610ef5565b9350602085013567ffffffffffffffff80821115610f7757600080fd5b818701915087601f830112610f8b57600080fd5b813581811115610f9d57610f9d610f25565b604051601f8201601f19908116603f01168101908382118183101715610fc557610fc5610f25565b816040528281528a6020848701011115610fde57600080fd5b826020860160208301376000928101602001929092525095989597505050506040840135936060013592915050565b60006020828403121561101f57600080fd5b5035919050565b6000806000806080858703121561103c57600080fd5b61104585610ef5565b966020860135965060408601359560600135945092505050565b600181811c9082168061107357607f821691505b60208210810361109357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000826110cc57634e487b7160e01b600052601260045260246000fd5b500490565b808202811582820484141761037457610374611099565b8181038181111561037457610374611099565b6020815260006103716020830184610dd0565b60006020828403121561112057600080fd5b5051919050565b60608152600061113a6060830186610dd0565b60208301949094525060400152919050565b601f82111561119657600081815260208120601f850160051c810160208610156111735750805b601f850160051c820191505b818110156111925782815560010161117f565b5050505b505050565b815167ffffffffffffffff8111156111b5576111b5610f25565b6111c9816111c3845461105f565b8461114c565b602080601f8311600181146111fe57600084156111e65750858301515b600019600386901b1c1916600185901b178555611192565b600085815260208120601f198616915b8281101561122d5788860151825594840194600190910190840161120e565b508582101561124b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b8082018082111561037457610374611099565b851515815260a06020820152600061128960a0830187610dd0565b604083019590955250606081019290925260809091015292915050565b841515815260006020608081840152600086546112c28161105f565b80608087015260a06001808416600081146112e457600181146112fe5761132c565b60ff1985168984015283151560051b89018301955061132c565b8b6000528660002060005b858110156113245781548b8201860152908301908801611309565b8a0184019650505b505050505060408401959095525050606001529291505056fea2646970667358221220a8033e734a6c22d8eb4c977b6da91aa64f6f3ed6a6e676d959ca7a16da155c3764736f6c63430008140033";

type PerpetualConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PerpetualConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Perpetual__factory extends ContractFactory {
  constructor(...args: PerpetualConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _collateralManagerAddress: string,
    _priceOracleAddress: string,
    overrides?: Overrides & { from?: string }
  ): Promise<Perpetual> {
    return super.deploy(
      _collateralManagerAddress,
      _priceOracleAddress,
      overrides || {}
    ) as Promise<Perpetual>;
  }
  override getDeployTransaction(
    _collateralManagerAddress: string,
    _priceOracleAddress: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _collateralManagerAddress,
      _priceOracleAddress,
      overrides || {}
    );
  }
  override attach(address: string): Perpetual {
    return super.attach(address) as Perpetual;
  }
  override connect(signer: Signer): Perpetual__factory {
    return super.connect(signer) as Perpetual__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PerpetualInterface {
    return new utils.Interface(_abi) as PerpetualInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Perpetual {
    return new Contract(address, _abi, signerOrProvider) as Perpetual;
  }
}
