/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { OrderBook, OrderBookInterface } from "../../contracts/OrderBook";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "OrderCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "OrderFilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum OrderBook.OrderType",
        name: "orderType",
        type: "uint8",
      },
    ],
    name: "OrderPlaced",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "buyOrders",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "cancelOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "asset",
        type: "string",
      },
    ],
    name: "getOrdersByAsset",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "enum OrderBook.OrderType",
            name: "orderType",
            type: "uint8",
          },
          {
            internalType: "enum OrderBook.OrderStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct OrderBook.Order[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "asset",
        type: "string",
      },
    ],
    name: "matchOrders",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nextOrderId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "orders",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "enum OrderBook.OrderType",
        name: "orderType",
        type: "uint8",
      },
      {
        internalType: "enum OrderBook.OrderStatus",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "asset",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "enum OrderBook.OrderType",
        name: "orderType",
        type: "uint8",
      },
    ],
    name: "placeOrder",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "sellOrders",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061114f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063551714f71161005b578063551714f7146100e4578063924a8582146100f7578063944374ec14610117578063a85c38ef1461012a57600080fd5b80630e98001e1461008d5780632a58b330146100b357806351154567146100bc578063514fcac7146100d1575b600080fd5b6100a061009b366004610e19565b610198565b6040519081526020015b60405180910390f35b6100a060005481565b6100cf6100ca366004610e80565b610378565b005b6100cf6100df366004610ebd565b61061e565b6100a06100f2366004610ed6565b610725565b61010a610105366004610e80565b610765565b6040516100aa9190610f55565b6100a0610125366004610ed6565b610aa8565b610185610138366004610ebd565b60016020819052600091825260409091208054918101546002820154600383015460048401546005909401546001600160a01b03909316939192909160ff80821692610100909204169087565b6040516100aa9796959493929190610ff4565b60008054819081806101a98361105a565b9190505590506040518060e00160405280828152602001336001600160a01b031681526020018681526020018581526020018460018111156101ed576101ed610f1b565b8152602001600081524260209182015260008381526001808352604091829020845181559284015183820180546001600160a01b0319166001600160a01b039092169190911790559083015160028301556060830151600383015560808301516004830180549192909160ff191690838181111561026d5761026d610f1b565b021790555060a082015160048201805461ff00191661010083600281111561029757610297610f1b565b021790555060c0919091015160059091015560008360018111156102bd576102bd610f1b565b036102fb576002866040516102d29190611073565b908152604051602091819003820190208054600181018255600091825291902001819055610330565b60038660405161030b9190611073565b9081526040516020918190038201902080546001810182556000918252919020018190555b7f23c33b6aac009535bc310a505e605c36ff1702279aa6ce2d68f7fe8f84b54fbe81338787876040516103679594939291906110a2565b60405180910390a195945050505050565b600060028260405161038a9190611073565b9081526020016040518091039020905060006003836040516103ac9190611073565b908152602001604051809103902090506000805b8354821080156103d05750825481105b15610501576000600160008685815481106103ed576103ed6110dd565b906000526020600020015481526020019081526020016000209050600060016000868581548110610420576104206110dd565b90600052602060002001548152602001908152602001600020905080600301548260030154106104f3576000816002015483600201541061046557816002015461046b565b82600201545b905061047b836000015482610ad3565b81546104879082610ad3565b60016004840154610100900460ff1660028111156104a7576104a7610f1b565b036104ba57846104b68161105a565b9550505b60016004830154610100900460ff1660028111156104da576104da610f1b565b036104ed57836104e98161105a565b9450505b506104fa565b5050610501565b50506103c0565b61055a8480548060200260200160405190810160405280929190818152602001828054801561054f57602002820191906000526020600020905b81548152602001906001019080831161053b575b505050505083610c01565b60028660405161056a9190611073565b9081526020016040518091039020908051906020019061058b929190610cbf565b506105e5838054806020026020016040519081016040528092919081815260200182805480156105da57602002820191906000526020600020905b8154815260200190600101908083116105c6575b505050505082610c01565b6003866040516105f59190611073565b90815260200160405180910390209080519060200190610616929190610cbf565b505050505050565b6000818152600160208190526040909120908101546001600160a01b031633146106805760405162461bcd60e51b815260206004820152600e60248201526d2737ba103cb7bab91037b93232b960911b60448201526064015b60405180910390fd5b60006004820154610100900460ff1660028111156106a0576106a0610f1b565b146106dd5760405162461bcd60e51b815260206004820152600d60248201526c10d85b9b9bdd0818d85b98d95b609a1b6044820152606401610677565b60048101805461ff0019166102001790556040805183815290517f61b9399f2f0f32ca39ce8d7be32caed5ec22fe07a6daba3a467ed479ec6065829181900360200190a15050565b8151602081840181018051600282529282019185019190912091905280548290811061075057600080fd5b90600052602060002001600091509150505481565b606060006002836040516107799190611073565b90815260200160405180910390209050600060038460405161079b9190611073565b908152604051908190036020019020805483549192506000916107be91906110f3565b67ffffffffffffffff8111156107d6576107d6610d76565b60405190808252806020026020018201604052801561080f57816020015b6107fc610d0a565b8152602001906001900390816107f45790505b50905060005b83548110156109515760016000858381548110610834576108346110dd565b906000526020600020015481526020019081526020016000206040518060e0016040529081600082015481526020016001820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b0316815260200160028201548152602001600382015481526020016004820160009054906101000a900460ff1660018111156108c9576108c9610f1b565b60018111156108da576108da610f1b565b81526020016004820160019054906101000a900460ff16600281111561090257610902610f1b565b600281111561091357610913610f1b565b8152602001600582015481525050828281518110610933576109336110dd565b602002602001018190525080806109499061105a565b915050610815565b5060005b8254811015610a9f5760016000848381548110610974576109746110dd565b906000526020600020015481526020019081526020016000206040518060e0016040529081600082015481526020016001820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b0316815260200160028201548152602001600382015481526020016004820160009054906101000a900460ff166001811115610a0957610a09610f1b565b6001811115610a1a57610a1a610f1b565b81526020016004820160019054906101000a900460ff166002811115610a4257610a42610f1b565b6002811115610a5357610a53610f1b565b81526005919091015460209091015284548390610a719084906110f3565b81518110610a8157610a816110dd565b60200260200101819052508080610a979061105a565b915050610955565b50949350505050565b8151602081840181018051600382529282019185019190912091905280548290811061075057600080fd5b6000828152600160205260408120906004820154610100900460ff166002811115610b0057610b00610f1b565b14610b3e5760405162461bcd60e51b815260206004820152600e60248201526d27b93232b9103737ba1037b832b760911b6044820152606401610677565b8181600201541015610b925760405162461bcd60e51b815260206004820152601960248201527f496e73756666696369656e74206f7264657220616d6f756e74000000000000006044820152606401610677565b81816002016000828254610ba69190611106565b90915550506002810154600003610bc95760048101805461ff0019166101001790555b6040518381527fcdf98e0235c72ad7ae8de32249da25cc98298c8f11710c55a3d58e9e7ac69f949060200160405180910390a1505050565b60606000828451610c129190611106565b67ffffffffffffffff811115610c2a57610c2a610d76565b604051908082528060200260200182016040528015610c53578160200160208202803683370190505b509050825b8451811015610cb557848181518110610c7357610c736110dd565b6020026020010151828583610c889190611106565b81518110610c9857610c986110dd565b602090810291909101015280610cad8161105a565b915050610c58565b5090505b92915050565b828054828255906000526020600020908101928215610cfa579160200282015b82811115610cfa578251825591602001919060010190610cdf565b50610d06929150610d61565b5090565b6040518060e001604052806000815260200160006001600160a01b03168152602001600081526020016000815260200160006001811115610d4d57610d4d610f1b565b815260200160008152602001600081525090565b5b80821115610d065760008155600101610d62565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610d9d57600080fd5b813567ffffffffffffffff80821115610db857610db8610d76565b604051601f8301601f19908116603f01168101908282118183101715610de057610de0610d76565b81604052838152866020858801011115610df957600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060008060808587031215610e2f57600080fd5b843567ffffffffffffffff811115610e4657600080fd5b610e5287828801610d8c565b9450506020850135925060408501359150606085013560028110610e7557600080fd5b939692955090935050565b600060208284031215610e9257600080fd5b813567ffffffffffffffff811115610ea957600080fd5b610eb584828501610d8c565b949350505050565b600060208284031215610ecf57600080fd5b5035919050565b60008060408385031215610ee957600080fd5b823567ffffffffffffffff811115610f0057600080fd5b610f0c85828601610d8c565b95602094909401359450505050565b634e487b7160e01b600052602160045260246000fd5b60028110610f4157610f41610f1b565b9052565b60038110610f4157610f41610f1b565b602080825282518282018190526000919060409081850190868401855b82811015610fe757815180518552868101516001600160a01b031687860152858101518686015260608082015190860152608080820151610fb582880182610f31565b505060a080820151610fc982880182610f45565b505060c0908101519085015260e09093019290850190600101610f72565b5091979650505050505050565b8781526001600160a01b0387166020820152604081018690526060810185905260e081016110256080830186610f31565b61103260a0830185610f45565b8260c083015298975050505050505050565b634e487b7160e01b600052601160045260246000fd5b60006001820161106c5761106c611044565b5060010190565b6000825160005b81811015611094576020818601810151858301520161107a565b506000920191825250919050565b8581526001600160a01b0385166020820152604081018490526060810183905260a081016110d36080830184610f31565b9695505050505050565b634e487b7160e01b600052603260045260246000fd5b80820180821115610cb957610cb9611044565b81810381811115610cb957610cb961104456fea264697066735822122047043ed5f81bc9e47ab620e6104839fa202b917aa28a83311de73cd6de45dda364736f6c63430008140033";

type OrderBookConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OrderBookConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OrderBook__factory extends ContractFactory {
  constructor(...args: OrderBookConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<OrderBook> {
    return super.deploy(overrides || {}) as Promise<OrderBook>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): OrderBook {
    return super.attach(address) as OrderBook;
  }
  override connect(signer: Signer): OrderBook__factory {
    return super.connect(signer) as OrderBook__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OrderBookInterface {
    return new utils.Interface(_abi) as OrderBookInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OrderBook {
    return new Contract(address, _abi, signerOrProvider) as OrderBook;
  }
}
