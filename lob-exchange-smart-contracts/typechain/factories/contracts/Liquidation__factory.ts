/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Liquidation,
  LiquidationInterface,
} from "../../contracts/Liquidation";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_perpetualAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "liquidationPrice",
        type: "uint256",
      },
    ],
    name: "PositionLiquidated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "currentPrice",
        type: "uint256",
      },
    ],
    name: "liquidatePosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516104d43803806104d483398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610441806100936000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806376f8996514610030575b600080fd5b61004361003e366004610210565b610045565b005b600080546040516316c1973960e01b81526001600160a01b038581166004830152909116906316c1973990602401600060405180830381865afa158015610090573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526100b89190810190610351565b9050806040015180156100ce57508060a0015182105b806100e9575080604001511580156100e957508060a0015182115b6101455760405162461bcd60e51b8152602060048201526024808201527f506f736974696f6e206973206e6f7420756e6465722d636f6c6c61746572616c6044820152631a5e995960e21b606482015260840160405180910390fd5b60005460405163a126d60160e01b8152600481018490526001600160a01b039091169063a126d60190602401600060405180830381600087803b15801561018b57600080fd5b505af115801561019f573d6000803e3d6000fd5b50505050826001600160a01b03167fb599f4177300bc574d09b859cefe5e758c124ec3c83a343159535a85b0abc3ba8260200151846040516101eb929190918252602082015260400190565b60405180910390a2505050565b6001600160a01b038116811461020d57600080fd5b50565b6000806040838503121561022357600080fd5b823561022e816101f8565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b60405160e0810167ffffffffffffffff811182821017156102755761027561023c565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156102a4576102a461023c565b604052919050565b80516102b7816101f8565b919050565b805180151581146102b757600080fd5b600082601f8301126102dd57600080fd5b815167ffffffffffffffff8111156102f7576102f761023c565b602061030b601f8301601f1916820161027b565b828152858284870101111561031f57600080fd5b60005b8381101561033d578581018301518282018401528201610322565b506000928101909101919091529392505050565b60006020828403121561036357600080fd5b815167ffffffffffffffff8082111561037b57600080fd5b9083019060e0828603121561038f57600080fd5b610397610252565b6103a0836102ac565b8152602083015160208201526103b8604084016102bc565b60408201526060830151828111156103cf57600080fd5b6103db878286016102cc565b6060830152506080830151608082015260a083015160a082015260c083015160c08201528093505050509291505056fea2646970667358221220581635208b793feb2cfbc7af5243e8ce956c64376ac6f6d9082280800302b1b564736f6c63430008140033";

type LiquidationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LiquidationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Liquidation__factory extends ContractFactory {
  constructor(...args: LiquidationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _perpetualAddress: string,
    overrides?: Overrides & { from?: string }
  ): Promise<Liquidation> {
    return super.deploy(
      _perpetualAddress,
      overrides || {}
    ) as Promise<Liquidation>;
  }
  override getDeployTransaction(
    _perpetualAddress: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(_perpetualAddress, overrides || {});
  }
  override attach(address: string): Liquidation {
    return super.attach(address) as Liquidation;
  }
  override connect(signer: Signer): Liquidation__factory {
    return super.connect(signer) as Liquidation__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LiquidationInterface {
    return new utils.Interface(_abi) as LiquidationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Liquidation {
    return new Contract(address, _abi, signerOrProvider) as Liquidation;
  }
}
